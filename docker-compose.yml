version: '3.8'

services:
  # DB2 データベース
  db2:
    image: ibmcom/db2:11.5.7.0
    container_name: air-cargo-db2
    environment:
      - DB2INST1_PASSWORD=db2inst1
      - DBNAME=AIRCARGO
      - LICENSE=accept
      - PERSISTENT_HOME=true
    ports:
      - "50000:50000"
    volumes:
      - db2_data:/database
      - ./database/init:/var/custom
    networks:
      - air-cargo-network

  # WebSphere Application Server
  websphere:
    image: ibmcom/websphere-traditional:9.0.5.11
    container_name: air-cargo-websphere
    environment:
      - PROFILE_NAME=AppSrv01
      - CELL_NAME=DefaultCell01
      - NODE_NAME=DefaultNode01
      - SERVER_NAME=server1
      - ADMIN_USER_NAME=wsadmin
      - ADMIN_PASSWORD=wsadmin123
    ports:
      - "9043:9043"
      - "9080:9080"
      - "9443:9443"
    volumes:
      - websphere_data:/opt/IBM/WebSphere/AppServer/profiles
      - ./backend/target:/opt/IBM/WebSphere/AppServer/profiles/AppSrv01/installedApps
    depends_on:
      - db2
    networks:
      - air-cargo-network

  # Spring Boot バックエンド
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: air-cargo-backend
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB2_HOST=db2
      - DB2_PORT=50000
      - DB2_DATABASE=AIRCARGO
      - DB2_USER=db2inst1
      - DB2_PASSWORD=db2inst1
    ports:
      - "8080:8080"
    depends_on:
      - db2
    networks:
      - air-cargo-network
    volumes:
      - ./backend/logs:/app/logs

  # React Next.js フロントエンド
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: air-cargo-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - air-cargo-network
    volumes:
      - ./frontend/.next:/app/.next

volumes:
  db2_data:
  websphere_data:

networks:
  air-cargo-network:
    driver: bridge 